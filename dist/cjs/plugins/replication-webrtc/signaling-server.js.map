{"version":3,"file":"signaling-server.js","names":["_index","require","PEER_ID_LENGTH","exports","startSignalingServerSimplePeer","serverOptions","WebSocketServer","wss","peerById","Map","peersByRoom","disconnectSocket","peerId","reason","peer","get","socket","close","undefined","rooms","forEach","roomId","room","delete","size","on","ws","randomCouchString","id","set","sendMessage","type","yourPeerId","err","console","error","dir","msgEvent","message","JSON","parse","toString","validateIdString","includes","getFromMapOrCreate","Set","add","otherPeerId","otherPeer","otherPeerIds","Array","from","senderPeerId","receiver","receiverPeerId","port","server","localUrl","msgString","stringify","send","length"],"sources":["../../../../src/plugins/replication-webrtc/signaling-server.ts"],"sourcesContent":["import {\n    getFromMapOrCreate,\n    randomCouchString\n} from '../utils/index.ts';\nimport type {\n    PeerMessage\n} from './connection-handler-simple-peer.ts';\nimport type {\n    WebSocket,\n    ServerOptions\n} from 'ws';\n\nexport const PEER_ID_LENGTH = 12;\nexport type ServerPeer = {\n    id: string;\n    socket: WebSocket;\n    rooms: string[];\n};\n\n\n/**\n * Starts a WebRTC signaling server\n * that can be used in tests.\n*/\nexport async function startSignalingServerSimplePeer(\n    serverOptions: ServerOptions\n) {\n    const { WebSocketServer } = await import('ws');\n    const wss = new WebSocketServer(serverOptions);\n\n    const peerById = new Map<string, ServerPeer>();\n    const peersByRoom = new Map<string, Set<string>>();\n\n    function disconnectSocket(peerId: string, reason: string) {\n        const peer = peerById.get(peerId);\n        if (peer) {\n            peer.socket.close(undefined, reason);\n            peer.rooms.forEach(roomId => {\n                const room = peersByRoom.get(roomId);\n                room?.delete(peerId);\n                if (room && room.size === 0) {\n                    peersByRoom.delete(roomId);\n                }\n            });\n        }\n        peerById.delete(peerId);\n    }\n\n    wss.on('connection', function (ws) {\n        /**\n         * PeerID is created by the server to prevent malicious\n         * actors from falsy claiming other peoples ids.\n         */\n        const peerId = randomCouchString(PEER_ID_LENGTH);\n        const peer: ServerPeer = {\n            id: peerId,\n            socket: ws,\n            rooms: []\n        };\n        peerById.set(peerId, peer);\n\n        sendMessage(ws, { type: 'init', yourPeerId: peerId });\n\n\n        ws.on('error', err => {\n            console.error('SERVER ERROR:');\n            console.dir(err);\n            disconnectSocket(peerId, 'socket errored');\n        });\n        ws.on('close', () => {\n            disconnectSocket(peerId, 'socket disconnected');\n        });\n\n        ws.on('message', msgEvent => {\n            const message = JSON.parse(msgEvent.toString());\n            const type = message.type;\n            switch (type) {\n                case 'join':\n                    const roomId = message.room;\n                    if (\n                        !validateIdString(roomId) ||\n                        !validateIdString(peerId)\n                    ) {\n                        disconnectSocket(peerId, 'invalid ids');\n                        return;\n                    }\n\n                    if (peer.rooms.includes(peerId)) {\n                        return;\n                    }\n\n\n                    const room = getFromMapOrCreate(\n                        peersByRoom,\n                        message.room,\n                        () => new Set()\n                    );\n\n                    room.add(peerId);\n\n                    // tell everyone about new room state\n                    room.forEach(otherPeerId => {\n                        const otherPeer = peerById.get(otherPeerId);\n                        if (otherPeer) {\n                            sendMessage(\n                                otherPeer.socket,\n                                {\n                                    type: 'joined',\n                                    otherPeerIds: Array.from(room)\n                                }\n                            );\n                        }\n                    });\n                    break;\n                case 'signal':\n                    if (\n                        message.senderPeerId !== peerId\n                    ) {\n                        disconnectSocket(peerId, 'spoofed sender');\n                        return;\n                    }\n                    const receiver = peerById.get(message.receiverPeerId);\n                    if (receiver) {\n                        sendMessage(\n                            receiver.socket,\n                            message\n                        );\n                    }\n                    break;\n                default:\n                    disconnectSocket(peerId, 'unknown message type ' + type);\n            }\n\n        });\n    });\n\n    return {\n        port: serverOptions.port,\n        server: wss,\n        localUrl: 'ws://localhost:' + serverOptions.port\n    };\n}\n\n\nfunction sendMessage(ws: WebSocket, message: PeerMessage) {\n    const msgString = JSON.stringify(message);\n    ws.send(msgString);\n}\n\nfunction validateIdString(roomId: string): boolean {\n    if (\n        typeof roomId === 'string' &&\n        roomId.length > 5 &&\n        roomId.length < 100\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"],"mappings":"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"}