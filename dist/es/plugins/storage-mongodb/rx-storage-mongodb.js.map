{"version":3,"file":"rx-storage-mongodb.js","names":["ensureRxStorageInstanceParamsAreCorrect","DEFAULT_CHECKPOINT_SCHEMA","getPrimaryFieldOfPrimaryKey","RX_STORAGE_NAME_MONGODB","primarySwapMongoDBQuerySelector","swapToMongoSort","createMongoDBStorageInstance","RxStorageMongoDBStatics","prepareQuery","schema","mutateableQuery","primaryKey","preparedQuery","query","mongoSelector","selector","mongoSort","sort","checkpointSchema","RxStorageMongoDB","databaseSettings","name","statics","_proto","prototype","createStorageInstance","params","getRxStorageMongoDB","storage"],"sources":["../../../../src/plugins/storage-mongodb/rx-storage-mongodb.ts"],"sourcesContent":["import type {\n    FilledMangoQuery,\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorage,\n    RxStorageInstanceCreationParams,\n    RxStorageStatics\n} from '../../types';\n\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper';\nimport { DEFAULT_CHECKPOINT_SCHEMA, getPrimaryFieldOfPrimaryKey } from '../../rx-schema-helper';\nimport { RX_STORAGE_NAME_MONGODB, primarySwapMongoDBQuerySelector, swapToMongoSort } from './mongodb-helper';\nimport type { MongoDBDatabaseSettings, MongoDBPreparedQuery, MongoDBSettings, MongoDBStorageInternals } from './mongodb-types';\nimport { RxStorageInstanceMongoDB, createMongoDBStorageInstance } from './rx-storage-instance-mongodb';\n\nexport const RxStorageMongoDBStatics: RxStorageStatics = {\n    prepareQuery<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: FilledMangoQuery<RxDocType>\n    ) {\n        const primaryKey = getPrimaryFieldOfPrimaryKey(schema.primaryKey) as any;\n        const preparedQuery: MongoDBPreparedQuery<RxDocType> = {\n            query: mutateableQuery,\n            mongoSelector: primarySwapMongoDBQuerySelector(\n                primaryKey,\n                mutateableQuery.selector\n            ),\n            mongoSort: swapToMongoSort(mutateableQuery.sort)\n        };\n        return preparedQuery;\n    },\n    checkpointSchema: DEFAULT_CHECKPOINT_SCHEMA\n};\n\nexport class RxStorageMongoDB implements RxStorage<MongoDBStorageInternals, MongoDBSettings> {\n    public name = RX_STORAGE_NAME_MONGODB;\n    public statics = RxStorageMongoDBStatics;\n\n    constructor(\n        public databaseSettings: MongoDBDatabaseSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, MongoDBSettings>\n    ): Promise<RxStorageInstanceMongoDB<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createMongoDBStorageInstance(this, params, this.databaseSettings);\n    }\n}\n\nexport function getRxStorageMongoDB(\n    databaseSettings: MongoDBDatabaseSettings\n): RxStorageMongoDB {\n    const storage = new RxStorageMongoDB(databaseSettings);\n    return storage;\n}\n"],"mappings":"AASA,SAASA,uCAAuC,QAAQ,yBAAyB;AACjF,SAASC,yBAAyB,EAAEC,2BAA2B,QAAQ,wBAAwB;AAC/F,SAASC,uBAAuB,EAAEC,+BAA+B,EAAEC,eAAe,QAAQ,kBAAkB;AAE5G,SAAmCC,4BAA4B,QAAQ,+BAA+B;AAEtG,OAAO,IAAMC,uBAAyC,GAAG;EACrDC,YAAYA,CACRC,MAA+C,EAC/CC,eAA4C,EAC9C;IACE,IAAMC,UAAU,GAAGT,2BAA2B,CAACO,MAAM,CAACE,UAAU,CAAQ;IACxE,IAAMC,aAA8C,GAAG;MACnDC,KAAK,EAAEH,eAAe;MACtBI,aAAa,EAAEV,+BAA+B,CAC1CO,UAAU,EACVD,eAAe,CAACK,QACpB,CAAC;MACDC,SAAS,EAAEX,eAAe,CAACK,eAAe,CAACO,IAAI;IACnD,CAAC;IACD,OAAOL,aAAa;EACxB,CAAC;EACDM,gBAAgB,EAAEjB;AACtB,CAAC;AAED,WAAakB,gBAAgB;EAIzB,SAAAA,iBACWC,gBAAyC,EAClD;IAAA,KALKC,IAAI,GAAGlB,uBAAuB;IAAA,KAC9BmB,OAAO,GAAGf,uBAAuB;IAAA,KAG7Ba,gBAAyC,GAAzCA,gBAAyC;EAChD;EAAC,IAAAG,MAAA,GAAAJ,gBAAA,CAAAK,SAAA;EAAAD,MAAA,CAEEE,qBAAqB,GAA5B,SAAAA,sBACIC,MAAmE,EACvB;IAC5C1B,uCAAuC,CAAC0B,MAAM,CAAC;IAC/C,OAAOpB,4BAA4B,CAAC,IAAI,EAAEoB,MAAM,EAAE,IAAI,CAACN,gBAAgB,CAAC;EAC5E,CAAC;EAAA,OAAAD,gBAAA;AAAA;AAGL,OAAO,SAASQ,mBAAmBA,CAC/BP,gBAAyC,EACzB;EAChB,IAAMQ,OAAO,GAAG,IAAIT,gBAAgB,CAACC,gBAAgB,CAAC;EACtD,OAAOQ,OAAO;AAClB"}