{"version":3,"file":"index.js","names":["combineLatest","shareReplay","switchMap","getFromMapOrCreate","PROMISE_RESOLVE_FALSE","RXJS_SHARE_REPLAY_DEFAULTS","mustMigrate","DataMigrator","getMigrationStateByDatabase","onDatabaseDestroy","DATA_MIGRATOR_BY_COLLECTION","WeakMap","RxDBMigrationPlugin","name","rxdb","hooks","preDestroyRxDatabase","after","prototypes","RxDatabase","proto","migrationStates","pipe","list","RxCollection","getDataMigrator","asRxCollection","migrationStrategies","migrationNeeded","schema","version","_getOldCollections","getBatchOfOldCollection","migrateDocumentData","_migrateDocuments","deleteOldCollection","migrateOldCollection","migratePromise"],"sources":["../../../../src/plugins/migration/index.ts"],"sourcesContent":["import {\n    combineLatest,\n    Observable\n} from 'rxjs';\nimport {\n    shareReplay,\n    switchMap\n} from 'rxjs/operators';\nimport type {\n    RxPlugin,\n    RxCollection,\n    RxDatabase,\n    AllMigrationStates\n} from '../../types';\nimport { getFromMapOrCreate, PROMISE_RESOLVE_FALSE, RXJS_SHARE_REPLAY_DEFAULTS } from '../../plugins/utils';\nimport {\n    mustMigrate,\n    DataMigrator\n} from './data-migrator';\nimport {\n    getMigrationStateByDatabase,\n    onDatabaseDestroy\n} from './migration-state';\n\nexport const DATA_MIGRATOR_BY_COLLECTION: WeakMap<RxCollection, DataMigrator> = new WeakMap();\n\nexport const RxDBMigrationPlugin: RxPlugin = {\n    name: 'migration',\n    rxdb: true,\n    hooks: {\n        preDestroyRxDatabase: {\n            after: onDatabaseDestroy\n        }\n    },\n    prototypes: {\n        RxDatabase: (proto: any) => {\n            proto.migrationStates = function (this: RxDatabase): Observable<AllMigrationStates> {\n                return getMigrationStateByDatabase(this).pipe(\n                    switchMap(list => combineLatest(list)),\n                    shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n                );\n            };\n        },\n        RxCollection: (proto: any) => {\n            proto.getDataMigrator = function (this: RxCollection): DataMigrator {\n                return getFromMapOrCreate(\n                    DATA_MIGRATOR_BY_COLLECTION,\n                    this,\n                    () => new DataMigrator(\n                        this.asRxCollection,\n                        this.migrationStrategies\n                    )\n                );\n            };\n            proto.migrationNeeded = function (this: RxCollection) {\n                if (this.schema.version === 0) {\n                    return PROMISE_RESOLVE_FALSE;\n                }\n                return mustMigrate(this.getDataMigrator());\n            };\n        }\n    }\n};\n\n\n// used in tests\nexport {\n    _getOldCollections,\n    getBatchOfOldCollection,\n    migrateDocumentData,\n    _migrateDocuments,\n    deleteOldCollection,\n    migrateOldCollection,\n    migratePromise,\n    DataMigrator\n} from './data-migrator';\n"],"mappings":"AAAA,SACIA,aAAa,QAEV,MAAM;AACb,SACIC,WAAW,EACXC,SAAS,QACN,gBAAgB;AAOvB,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,0BAA0B,QAAQ,qBAAqB;AAC3G,SACIC,WAAW,EACXC,YAAY,QACT,iBAAiB;AACxB,SACIC,2BAA2B,EAC3BC,iBAAiB,QACd,mBAAmB;AAE1B,OAAO,IAAMC,2BAAgE,GAAG,IAAIC,OAAO,EAAE;AAE7F,OAAO,IAAMC,mBAA6B,GAAG;EACzCC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;IACHC,oBAAoB,EAAE;MAClBC,KAAK,EAAER;IACX;EACJ,CAAC;EACDS,UAAU,EAAE;IACRC,UAAU,EAAGC,KAAU,IAAK;MACxBA,KAAK,CAACC,eAAe,GAAG,YAA4D;QAChF,OAAOb,2BAA2B,CAAC,IAAI,CAAC,CAACc,IAAI,CACzCpB,SAAS,CAACqB,IAAI,IAAIvB,aAAa,CAACuB,IAAI,CAAC,CAAC,EACtCtB,WAAW,CAACI,0BAA0B,CAAC,CAC1C;MACL,CAAC;IACL,CAAC;IACDmB,YAAY,EAAGJ,KAAU,IAAK;MAC1BA,KAAK,CAACK,eAAe,GAAG,YAA4C;QAChE,OAAOtB,kBAAkB,CACrBO,2BAA2B,EAC3B,IAAI,EACJ,MAAM,IAAIH,YAAY,CAClB,IAAI,CAACmB,cAAc,EACnB,IAAI,CAACC,mBAAmB,CAC3B,CACJ;MACL,CAAC;MACDP,KAAK,CAACQ,eAAe,GAAG,YAA8B;QAClD,IAAI,IAAI,CAACC,MAAM,CAACC,OAAO,KAAK,CAAC,EAAE;UAC3B,OAAO1B,qBAAqB;QAChC;QACA,OAAOE,WAAW,CAAC,IAAI,CAACmB,eAAe,EAAE,CAAC;MAC9C,CAAC;IACL;EACJ;AACJ,CAAC;;AAGD;AACA,SACIM,kBAAkB,EAClBC,uBAAuB,EACvBC,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,oBAAoB,EACpBC,cAAc,EACd9B,YAAY,QACT,iBAAiB"}