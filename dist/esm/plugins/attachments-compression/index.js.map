{"version":3,"file":"index.js","names":["wrapRxStorageInstance","deflate","inflate","arrayBufferToBase64","base64ToArrayBuffer","ensureNotFalsy","flatClone","compressBase64","_mode","base64String","arrayBuffer","result","decompressBase64","wrappedAttachmentsCompressionStorage","args","Object","assign","storage","createStorageInstance","params","schema","attachments","compression","mode","Error","modifyToStorage","docData","Promise","all","values","_attachments","map","attachment","data","attachmentWriteData","modifyAttachmentFromStorage","attachmentData","childSchema","instance","d"],"sources":["../../../../src/plugins/attachments-compression/index.ts"],"sourcesContent":["import { wrapRxStorageInstance } from '../../plugin-helpers.ts';\nimport type {\n    RxStorage,\n    RxStorageInstanceCreationParams,\n    RxDocumentWriteData,\n    CompressionMode,\n    RxAttachmentWriteData\n} from '../../types/index.d.ts';\n\nimport {\n    deflate,\n    inflate\n} from 'pako';\nimport {\n    arrayBufferToBase64,\n    base64ToArrayBuffer,\n    ensureNotFalsy,\n    flatClone\n} from '../utils/index.ts';\n\n\nexport function compressBase64(\n    _mode: CompressionMode,\n    base64String: string\n): string {\n    const arrayBuffer = base64ToArrayBuffer(base64String);\n    const result = deflate(arrayBuffer, {});\n    return arrayBufferToBase64(result);\n}\nexport function decompressBase64(\n    _mode: CompressionMode,\n    base64String: string\n): string {\n    const arrayBuffer = base64ToArrayBuffer(base64String);\n    const result = inflate(arrayBuffer);\n    return arrayBufferToBase64(result);\n}\n\n\n/**\n * A RxStorage wrapper that compresses attachment data on writes\n * and decompresses the data on reads.\n * This is currently using the 'pako' module\n * @link https://www.npmjs.com/package/pako\n *\n * In the future when firefox supports the CompressionStream API,\n * we should switch to using the native API in browsers and the zlib package in node.js\n * @link https://caniuse.com/?search=compressionstream\n */\nexport function wrappedAttachmentsCompressionStorage<Internals, InstanceCreationOptions>(\n    args: {\n        storage: RxStorage<Internals, InstanceCreationOptions>;\n    }\n): RxStorage<Internals, InstanceCreationOptions> {\n    return Object.assign(\n        {},\n        args.storage,\n        {\n            async createStorageInstance<RxDocType>(\n                params: RxStorageInstanceCreationParams<RxDocType, any>\n            ) {\n                if (\n                    !params.schema.attachments ||\n                    !params.schema.attachments.compression\n                ) {\n                    return args.storage.createStorageInstance(params);\n                }\n\n\n                const mode = params.schema.attachments.compression;\n\n                if (mode !== 'deflate') {\n                    throw new Error('unknown compression mode ' + mode);\n                }\n\n                async function modifyToStorage(docData: RxDocumentWriteData<RxDocType>) {\n                    await Promise.all(\n                        Object.values(docData._attachments).map(async (attachment) => {\n                            if (!(attachment as RxAttachmentWriteData).data) {\n                                return;\n                            }\n                            const attachmentWriteData = attachment as RxAttachmentWriteData;\n                            attachmentWriteData.data = await compressBase64(mode, attachmentWriteData.data);\n                        })\n                    );\n                    return docData;\n                }\n                function modifyAttachmentFromStorage(attachmentData: string): string {\n                    return decompressBase64(mode, attachmentData);\n                }\n\n                /**\n                 * Because this wrapper resolves the attachments.compression,\n                 * we have to remove it before sending it to the underlying RxStorage.\n                 * which allows underlying storages to detect wrong configurations\n                 * like when compression is set to false but no attachment-compression module is used.\n                 */\n                const childSchema = flatClone(params.schema);\n                childSchema.attachments = flatClone(childSchema.attachments);\n                delete ensureNotFalsy(childSchema.attachments).compression;\n\n                const instance = await args.storage.createStorageInstance(\n                    Object.assign(\n                        {},\n                        params,\n                        {\n                            schema: childSchema\n                        }\n                    )\n                );\n\n                return wrapRxStorageInstance(\n                    params.schema,\n                    instance,\n                    modifyToStorage,\n                    d => d,\n                    modifyAttachmentFromStorage\n                );\n            }\n        }\n    );\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,yBAAyB;AAS/D,SACIC,OAAO,EACPC,OAAO,QACJ,MAAM;AACb,SACIC,mBAAmB,EACnBC,mBAAmB,EACnBC,cAAc,EACdC,SAAS,QACN,mBAAmB;AAG1B,OAAO,SAASC,cAAcA,CAC1BC,KAAsB,EACtBC,YAAoB,EACd;EACN,IAAMC,WAAW,GAAGN,mBAAmB,CAACK,YAAY,CAAC;EACrD,IAAME,MAAM,GAAGV,OAAO,CAACS,WAAW,EAAE,CAAC,CAAC,CAAC;EACvC,OAAOP,mBAAmB,CAACQ,MAAM,CAAC;AACtC;AACA,OAAO,SAASC,gBAAgBA,CAC5BJ,KAAsB,EACtBC,YAAoB,EACd;EACN,IAAMC,WAAW,GAAGN,mBAAmB,CAACK,YAAY,CAAC;EACrD,IAAME,MAAM,GAAGT,OAAO,CAACQ,WAAW,CAAC;EACnC,OAAOP,mBAAmB,CAACQ,MAAM,CAAC;AACtC;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,oCAAoCA,CAChDC,IAEC,EAC4C;EAC7C,OAAOC,MAAM,CAACC,MAAM,CAChB,CAAC,CAAC,EACFF,IAAI,CAACG,OAAO,EACZ;IACI,MAAMC,qBAAqBA,CACvBC,MAAuD,EACzD;MACE,IACI,CAACA,MAAM,CAACC,MAAM,CAACC,WAAW,IAC1B,CAACF,MAAM,CAACC,MAAM,CAACC,WAAW,CAACC,WAAW,EACxC;QACE,OAAOR,IAAI,CAACG,OAAO,CAACC,qBAAqB,CAACC,MAAM,CAAC;MACrD;MAGA,IAAMI,IAAI,GAAGJ,MAAM,CAACC,MAAM,CAACC,WAAW,CAACC,WAAW;MAElD,IAAIC,IAAI,KAAK,SAAS,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,IAAI,CAAC;MACvD;MAEA,eAAeE,eAAeA,CAACC,OAAuC,EAAE;QACpE,MAAMC,OAAO,CAACC,GAAG,CACbb,MAAM,CAACc,MAAM,CAACH,OAAO,CAACI,YAAY,CAAC,CAACC,GAAG,CAAC,MAAOC,UAAU,IAAK;UAC1D,IAAI,CAAEA,UAAU,CAA2BC,IAAI,EAAE;YAC7C;UACJ;UACA,IAAMC,mBAAmB,GAAGF,UAAmC;UAC/DE,mBAAmB,CAACD,IAAI,GAAG,MAAM1B,cAAc,CAACgB,IAAI,EAAEW,mBAAmB,CAACD,IAAI,CAAC;QACnF,CAAC,CACL,CAAC;QACD,OAAOP,OAAO;MAClB;MACA,SAASS,2BAA2BA,CAACC,cAAsB,EAAU;QACjE,OAAOxB,gBAAgB,CAACW,IAAI,EAAEa,cAAc,CAAC;MACjD;;MAEA;AAChB;AACA;AACA;AACA;AACA;MACgB,IAAMC,WAAW,GAAG/B,SAAS,CAACa,MAAM,CAACC,MAAM,CAAC;MAC5CiB,WAAW,CAAChB,WAAW,GAAGf,SAAS,CAAC+B,WAAW,CAAChB,WAAW,CAAC;MAC5D,OAAOhB,cAAc,CAACgC,WAAW,CAAChB,WAAW,CAAC,CAACC,WAAW;MAE1D,IAAMgB,QAAQ,GAAG,MAAMxB,IAAI,CAACG,OAAO,CAACC,qBAAqB,CACrDH,MAAM,CAACC,MAAM,CACT,CAAC,CAAC,EACFG,MAAM,EACN;QACIC,MAAM,EAAEiB;MACZ,CACJ,CACJ,CAAC;MAED,OAAOrC,qBAAqB,CACxBmB,MAAM,CAACC,MAAM,EACbkB,QAAQ,EACRb,eAAe,EACfc,CAAC,IAAIA,CAAC,EACNJ,2BACJ,CAAC;IACL;EACJ,CACJ,CAAC;AACL"}