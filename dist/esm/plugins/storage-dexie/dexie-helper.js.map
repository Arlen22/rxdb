{"version":3,"file":"dexie-helper.js","names":["Dexie","flatClone","getFromMapOrCreate","toArray","newRxError","getPrimaryFieldOfPrimaryKey","getSchemaByObjectPath","RxStorageDefaultStatics","DEXIE_DOCS_TABLE_NAME","DEXIE_DELETED_DOCS_TABLE_NAME","DEXIE_CHANGES_TABLE_NAME","RX_STORAGE_NAME_DEXIE","RxStorageDexieStatics","DEXIE_STATE_DB_BY_NAME","Map","REF_COUNT_PER_DEXIE_DB","getDexieDbWithTables","databaseName","collectionName","settings","schema","primaryPath","primaryKey","dexieDbName","version","state","value","useSettings","autoOpen","dexieDb","dexieStoresSettings","getDexieStoreSchema","stores","open","dexieTable","dexieDeletedTable","set","closeDexieDb","statePromise","prevCount","get","newCount","close","delete","ensureNoBooleanIndex","indexes","checkedFields","Set","forEach","index","fields","field","has","add","schemaObj","type","DEXIE_PIPE_SUBSTITUTE","dexieReplaceIfStartsWithPipe","str","split","length","map","part","join","startsWith","withoutFirst","substring","dexieReplaceIfStartsWithPipeRevert","fromStorageToDexie","documentData","Array","isArray","row","ret","Object","entries","key","fromDexieToStorage","rxJsonSchema","parts","push","arIndex","getDocsInDb","internals","docIds","nonDeletedDocsInDb","deletedDocsInDb","Promise","all","bulkGet","docsInDb","slice","doc","idx"],"sources":["../../../../src/plugins/storage-dexie/dexie-helper.ts"],"sourcesContent":["import type {\n    DexieStorageInternals,\n    RxDocumentData,\n    RxJsonSchema\n} from '../../types/index.d.ts';\nimport { Dexie } from 'dexie';\nimport type { DexieSettings } from '../../types/index.d.ts';\nimport { flatClone, getFromMapOrCreate, toArray } from '../utils/index.ts';\nimport { newRxError } from '../../rx-error.ts';\nimport {\n    getPrimaryFieldOfPrimaryKey,\n    getSchemaByObjectPath\n} from '../../rx-schema-helper.ts';\nimport { RxStorageDefaultStatics } from '../../rx-storage-statics.ts';\n\nexport const DEXIE_DOCS_TABLE_NAME = 'docs';\nexport const DEXIE_DELETED_DOCS_TABLE_NAME = 'deleted-docs';\nexport const DEXIE_CHANGES_TABLE_NAME = 'changes';\n\nexport const RX_STORAGE_NAME_DEXIE = 'dexie';\n\nexport const RxStorageDexieStatics = RxStorageDefaultStatics;\n\nconst DEXIE_STATE_DB_BY_NAME: Map<string, DexieStorageInternals> = new Map();\nconst REF_COUNT_PER_DEXIE_DB: Map<DexieStorageInternals, number> = new Map();\nexport function getDexieDbWithTables(\n    databaseName: string,\n    collectionName: string,\n    settings: DexieSettings,\n    schema: RxJsonSchema<any>\n): DexieStorageInternals {\n    const primaryPath = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n    const dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\n\n    const state = getFromMapOrCreate(\n        DEXIE_STATE_DB_BY_NAME,\n        dexieDbName,\n        () => {\n            const value = (async () => {\n                /**\n                 * IndexedDB was not designed for dynamically adding tables on the fly,\n                 * so we create one dexie database per RxDB storage instance.\n                 * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\n                 */\n                const useSettings = flatClone(settings);\n                useSettings.autoOpen = false;\n                const dexieDb = new Dexie(dexieDbName, useSettings);\n                const dexieStoresSettings = {\n                    [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\n                    [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\n                    /**\n                     * Instead of adding {deleted: false} to every query we run over the document store,\n                     * we move deleted documents into a separate store where they can only be queried\n                     * by primary key.\n                     * This increases performance because it is way easier for the query planner to select\n                     * a good index and we also do not have to add the _deleted field to every index.\n                     *\n                     * We also need the [_meta.lwt+' + primaryPath + '] index for getChangedDocumentsSince()\n                     */\n                    [DEXIE_DELETED_DOCS_TABLE_NAME]: primaryPath + ',_meta.lwt,[_meta.lwt+' + primaryPath + ']'\n                };\n\n                dexieDb.version(1).stores(dexieStoresSettings);\n                await dexieDb.open();\n                return {\n                    dexieDb,\n                    dexieTable: (dexieDb as any)[DEXIE_DOCS_TABLE_NAME],\n                    dexieDeletedTable: (dexieDb as any)[DEXIE_DELETED_DOCS_TABLE_NAME]\n                };\n            })();\n            DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\n            REF_COUNT_PER_DEXIE_DB.set(state, 0);\n            return value;\n        }\n    );\n    return state;\n}\n\nexport async function closeDexieDb(statePromise: DexieStorageInternals) {\n    const state = await statePromise;\n    const prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\n    const newCount = (prevCount as any) - 1;\n    if (newCount === 0) {\n        state.dexieDb.close();\n        REF_COUNT_PER_DEXIE_DB.delete(statePromise);\n    } else {\n        REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\n    }\n}\n\nexport function ensureNoBooleanIndex(schema: RxJsonSchema<any>) {\n    if (!schema.indexes) {\n        return;\n    }\n    const checkedFields = new Set<string>();\n    schema.indexes.forEach(index => {\n        const fields = toArray(index);\n        fields.forEach(field => {\n            if (checkedFields.has(field)) {\n                return;\n            }\n            checkedFields.add(field);\n            const schemaObj = getSchemaByObjectPath(schema, field);\n            if (schemaObj.type === 'boolean') {\n                throw newRxError('DXE1', {\n                    schema,\n                    index,\n                    field\n                });\n            }\n        });\n    });\n}\n\n\n\n/**\n * It is not possible to set non-javascript-variable-syntax\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\n * which comes from the key-compression plugin.\n */\nexport const DEXIE_PIPE_SUBSTITUTE = '__';\nexport function dexieReplaceIfStartsWithPipe(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\n    }\n\n    if (str.startsWith('|')) {\n        const withoutFirst = str.substring(1);\n        return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\nexport function dexieReplaceIfStartsWithPipeRevert(str: string): string {\n    const split = str.split('.');\n    if (split.length > 1) {\n        return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\n    }\n\n    if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\n        const withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\n        return '|' + withoutFirst;\n    } else {\n        return str;\n    }\n}\n\n/**\n * @recursive\n */\nexport function fromStorageToDexie(documentData: RxDocumentData<any>): any {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromStorageToDexie(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object') {\n                value = fromStorageToDexie(value);\n            }\n            ret[dexieReplaceIfStartsWithPipe(key)] = value;\n        });\n        return ret;\n    }\n}\n\nexport function fromDexieToStorage(documentData: any): RxDocumentData<any> {\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\n        return documentData;\n    } else if (Array.isArray(documentData)) {\n        return documentData.map(row => fromDexieToStorage(row));\n    } else if (typeof documentData === 'object') {\n        const ret: any = {};\n        Object.entries(documentData).forEach(([key, value]) => {\n            if (typeof value === 'object' || Array.isArray(documentData)) {\n                value = fromDexieToStorage(value);\n            }\n            ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\n        });\n        return ret;\n    }\n}\n\n\n/**\n * Creates a string that can be used to create the dexie store.\n * @link https://dexie.org/docs/API-Reference#quick-reference\n */\nexport function getDexieStoreSchema(\n    rxJsonSchema: RxJsonSchema<any>\n): string {\n    let parts: string[][] = [];\n\n    /**\n     * First part must be the primary key\n     * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\n     */\n    const primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\n    parts.push([primaryKey]);\n\n    // add other indexes\n    if (rxJsonSchema.indexes) {\n        rxJsonSchema.indexes.forEach(index => {\n            const arIndex = toArray(index);\n            parts.push(arIndex);\n        });\n    }\n\n    // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\n    parts.push(['_meta.lwt', primaryKey]);\n\n    /**\n     * It is not possible to set non-javascript-variable-syntax\n     * keys as IndexedDB indexes. So we have to substitute the pipe-char\n     * which comes from the key-compression plugin.\n     */\n    parts = parts.map(part => {\n        return part.map(str => dexieReplaceIfStartsWithPipe(str));\n    });\n\n    return parts.map(part => {\n        if (part.length === 1) {\n            return part[0];\n        } else {\n            return '[' + part.join('+') + ']';\n        }\n    }).join(', ');\n}\n\n/**\n * Returns all documents in the database.\n * Non-deleted plus deleted ones.\n */\nexport async function getDocsInDb<RxDocType>(\n    internals: DexieStorageInternals,\n    docIds: string[]\n): Promise<RxDocumentData<RxDocType>[]> {\n    const state = await internals;\n    const [\n        nonDeletedDocsInDb,\n        deletedDocsInDb\n    ] = await Promise.all([\n        state.dexieTable.bulkGet(docIds),\n        state.dexieDeletedTable.bulkGet(docIds)\n    ]);\n    const docsInDb = deletedDocsInDb.slice(0);\n    nonDeletedDocsInDb.forEach((doc, idx) => {\n        if (doc) {\n            docsInDb[idx] = doc;\n        }\n    });\n    return docsInDb;\n}\n"],"mappings":"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"}