"use strict";(self.webpackChunkrxdb=self.webpackChunkrxdb||[]).push([[4989],{9138:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"articles/ideas","title":"ideas for articles","description":"- storing and searching through 1mio emails in a browser database","source":"@site/docs/articles/ideas.md","sourceDirName":"articles","slug":"/articles/ideas","permalink":"/articles/ideas","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var a=i(4848),r=i(8453);const t={},l="ideas for articles",d={},o=[{value:"Seo keywords:",id:"seo-keywords",level:2}];function c(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"ideas-for-articles",children:"ideas for articles"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"storing and searching through 1mio emails in a browser database"}),"\n",(0,a.jsx)(n.li,{children:"Finding the optimal way to shorten vector embeddings"}),"\n",(0,a.jsx)(n.li,{children:"Performance and quality of vector comparison functions (euclideanDistance etc)"}),"\n",(0,a.jsx)(n.li,{children:"performance and quality of vector indexing methods"}),"\n",(0,a.jsx)(n.li,{children:"What is new in IndexedDB 3.0"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"seo-keywords",children:"Seo keywords:"}),"\n",(0,a.jsx)(n.p,{children:'X- "optimistic ui"\nX- "local database" (rddt done)\nX- "react-native encryption"\nX- "vue database" (rddt done)\nX- "jquery database"\nX- "vue indexeddb"\nX- "firebase realtime database alternative" (rddt done)\nX- "firestore alternative" (rddt done)\nX- "ionic storage" (rddt done)\nX- "local database"\nX- "offline database"\nX- "zero local first"'}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:'"supabase alternative"'}),"\n",(0,a.jsx)(n.li,{children:'"reactjs storage"'}),"\n",(0,a.jsx)(n.li,{children:'"store local storage"'}),"\n",(0,a.jsx)(n.li,{children:'"react localstorage"'}),"\n",(0,a.jsx)(n.li,{children:'"react-native storage"'}),"\n",(0,a.jsx)(n.li,{children:'"supabase offline"'}),"\n",(0,a.jsx)(n.li,{children:'"store array in localstorage", "localStorage array of objects"'}),"\n",(0,a.jsx)(n.li,{children:'"real time web apps"'}),"\n",(0,a.jsx)(n.li,{children:'"reactive database"'}),"\n",(0,a.jsx)(n.li,{children:'"electron sqlite"'}),"\n",(0,a.jsx)(n.li,{children:'"in browser database"'}),"\n",(0,a.jsx)(n.li,{children:'"offline first app"'}),"\n",(0,a.jsx)(n.li,{children:'"json based database"'}),"\n",(0,a.jsx)(n.li,{children:'"react native sql"'}),"\n",(0,a.jsx)(n.li,{children:'"sqlite electron"'}),"\n",(0,a.jsx)(n.li,{children:'"localstorage vs indexeddb"'}),"\n",(0,a.jsx)(n.li,{children:'"react native nosql database"'}),"\n",(0,a.jsx)(n.li,{children:'"indexeddb library"'}),"\n",(0,a.jsx)(n.li,{children:'"indexeddb encryption"'}),"\n",(0,a.jsx)(n.li,{children:'"client side database"'}),"\n",(0,a.jsx)(n.li,{children:'"webtransport vs websocket"'}),"\n",(0,a.jsx)(n.li,{children:'"local first development"'}),"\n",(0,a.jsx)(n.li,{children:'"local storage examples"'}),"\n",(0,a.jsx)(n.li,{children:'"local vector database"'}),"\n",(0,a.jsx)(n.li,{children:'"nosql json database"'}),"\n",(0,a.jsx)(n.li,{children:'"mobile app database"'}),"\n",(0,a.jsx)(n.li,{children:'"web based database"'}),"\n",(0,a.jsx)(n.li,{children:'"webrtc p2p"'}),"\n",(0,a.jsx)(n.li,{children:'"json vs database"'}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const a={},r=s.createContext(a);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);