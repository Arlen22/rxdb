"use strict";(self.webpackChunkrxdb=self.webpackChunkrxdb||[]).push([[2061],{1772:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"rx-storage-dexie","title":"Lightning-Fast Browser DB - RxDB Dexie RxStorage","description":"Use Dexie.js to power RxDB in the browser. Enjoy quick setup, Dexie addons, and reliable storage for small apps or prototypes.","source":"@site/docs/rx-storage-dexie.md","sourceDirName":".","slug":"/rx-storage-dexie.html","permalink":"/rx-storage-dexie.html","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Lightning-Fast Browser DB - RxDB Dexie RxStorage","slug":"rx-storage-dexie.html","description":"Use Dexie.js to power RxDB in the browser. Enjoy quick setup, Dexie addons, and reliable storage for small apps or prototypes."},"sidebar":"tutorialSidebar","previous":{"title":"RxStorage Overview","permalink":"/rx-storage.html"},"next":{"title":"IndexedDB \ud83d\udc51","permalink":"/rx-storage-indexeddb.html"}}');var t=n(4848),i=n(8453);const o={title:"Lightning-Fast Browser DB - RxDB Dexie RxStorage",slug:"rx-storage-dexie.html",description:"Use Dexie.js to power RxDB in the browser. Enjoy quick setup, Dexie addons, and reliable storage for small apps or prototypes."},a="RxStorage Dexie.js",d={},l=[{value:"Usage",id:"usage",level:2},{value:"Overwrite/Polyfill the native IndexedDB",id:"overwritepolyfill-the-native-indexeddb",level:2},{value:"Using addons",id:"using-addons",level:2},{value:"Disabling the non-premium console log",id:"disabling-the-non-premium-console-log",level:2},{value:"Performance comparison with other RxStorage plugins",id:"performance-comparison-with-other-rxstorage-plugins",level:2}];function x(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"rxstorage-dexiejs",children:"RxStorage Dexie.js"})}),"\n",(0,t.jsxs)(r.p,{children:["To store the data inside of IndexedDB in the browser, you can use the ",(0,t.jsx)(r.a,{href:"https://github.com/dexie/Dexie.js",children:"Dexie.js"})," ",(0,t.jsx)(r.a,{href:"/rx-storage.html",children:"RxStorage"}),". Dexie.js is a minimal wrapper around IndexedDB and the Dexie.js RxStorage wraps that again to store RxDB data in the browser. For side projects and prototypes that run in a browser, you should use the dexie RxStorage as a default."]}),"\n",(0,t.jsxs)(r.admonition,{type:"note",children:[(0,t.jsxs)(r.p,{children:["While Dexie.js RxStorage can be used for free, most professional projects should switch to our ",(0,t.jsxs)(r.strong,{children:["premium ",(0,t.jsx)(r.a,{href:"/rx-storage-indexeddb.html",children:"IndexedDB RxStorage"})," \ud83d\udc51"]})," in production:"]}),(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["It is faster and reduces build size by up to ",(0,t.jsx)(r.strong,{children:"36%"}),"."]}),"\n",(0,t.jsxs)(r.li,{children:["It has a way ",(0,t.jsx)(r.a,{href:"/rx-storage-performance.html",children:"better performance"})," on reads and writes."]}),"\n",(0,t.jsxs)(r.li,{children:["It does not use a ",(0,t.jsx)(r.a,{href:"/slow-indexeddb.html#batched-cursor",children:"Batched Cursor"})," or ",(0,t.jsx)(r.a,{href:"/slow-indexeddb.html#custom-indexes",children:"custom indexes"})," which makes queries slower compared to the ",(0,t.jsx)(r.a,{href:"/rx-storage-indexeddb.html",children:"IndexedDB RxStorage"}),"."]}),"\n",(0,t.jsxs)(r.li,{children:["It supports ",(0,t.jsx)(r.strong,{children:"non-required indexes"})," which is ",(0,t.jsx)(r.a,{href:"https://github.com/pubkey/rxdb/pull/6643#issuecomment-2505310082",children:"not possible"})," with Dexie.js."]}),"\n",(0,t.jsxs)(r.li,{children:["It runs in a ",(0,t.jsx)(r.strong,{children:"WAL-like mode"})," (similar to SQLite) for faster writes and improved responsiveness."]}),"\n",(0,t.jsxs)(r.li,{children:["It support the ",(0,t.jsx)(r.a,{href:"/rx-storage-indexeddb.html#storage-buckets",children:"Storage Buckets API"})]}),"\n"]})]}),"\n",(0,t.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { createRxDatabase } from 'rxdb/plugins/core';\nimport { getRxStorageDexie } from 'rxdb/plugins/storage-dexie';\n\nconst db = await createRxDatabase({\n    name: 'exampledb',\n    storage: getRxStorageDexie()\n});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"overwritepolyfill-the-native-indexeddb",children:"Overwrite/Polyfill the native IndexedDB"}),"\n",(0,t.jsxs)(r.p,{children:["Node.js has no IndexedDB API. To still run the Dexie ",(0,t.jsx)(r.code,{children:"RxStorage"})," in Node.js, for example to run unit tests, you have to polyfill it.\nYou can do that by using the ",(0,t.jsx)(r.a,{href:"https://github.com/dumbmatter/fakeIndexedDB",children:"fake-indexeddb"})," module and pass it to the ",(0,t.jsx)(r.code,{children:"getRxStorageDexie()"})," function."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { createRxDatabase } from 'rxdb/plugins/core';\nimport { getRxStorageDexie } from 'rxdb/plugins/storage-dexie';\n\n//> npm install fake-indexeddb --save\nconst fakeIndexedDB = require('fake-indexeddb');\nconst fakeIDBKeyRange = require('fake-indexeddb/lib/FDBKeyRange');\n\nconst db = await createRxDatabase({\n    name: 'exampledb',\n    storage: getRxStorageDexie({\n        indexedDB: fakeIndexedDB,\n        IDBKeyRange: fakeIDBKeyRange\n    })\n});\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"using-addons",children:"Using addons"}),"\n",(0,t.jsxs)(r.p,{children:["Dexie.js has its own plugin system with ",(0,t.jsx)(r.a,{href:"https://dexie.org/docs/DerivedWork#known-addons",children:"many plugins"})," for encryption, replication or other use cases. With the Dexie.js ",(0,t.jsx)(r.code,{children:"RxStorage"})," you can use the same plugins by passing them to the ",(0,t.jsx)(r.code,{children:"getRxStorageDexie()"})," function."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"const db = await createRxDatabase({\n    name: 'exampledb',\n    storage: getRxStorageDexie({\n        addons: [ /* Your Dexie.js plugins */ ]\n    })\n});\n"})}),"\n",(0,t.jsx)(r.h2,{id:"disabling-the-non-premium-console-log",children:"Disabling the non-premium console log"}),"\n",(0,t.jsxs)(r.p,{children:["We want to be transparent with our community, and you'll notice a console message when using the free Dexie.js based RxStorage implementation. This message serves to inform you about the availability of faster storage solutions within our ",(0,t.jsx)(r.a,{href:"/premium/",children:"\ud83d\udc51 Premium Plugins"}),". We understand that this might be a minor inconvenience, and we sincerely apologize for that. However, maintaining and improving RxDB requires substantial resources, and our premium users help us ensure its sustainability. If you find value in RxDB and wish to remove this message, we encourage you to explore our premium storage options, which are optimized for professional use and production environments. Thank you for your understanding and support."]}),"\n",(0,t.jsxs)(r.p,{children:["If you already have premium access and want to use the Dexie.js ",(0,t.jsx)(r.a,{href:"/rx-storage.html",children:"RxStorage"})," without the log, you can call the ",(0,t.jsx)(r.code,{children:"setPremiumFlag()"})," function to disable the log."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"import { setPremiumFlag } from 'rxdb-premium/plugins/shared';\nsetPremiumFlag();\n"})}),"\n",(0,t.jsx)(r.h2,{id:"performance-comparison-with-other-rxstorage-plugins",children:"Performance comparison with other RxStorage plugins"}),"\n",(0,t.jsx)(r.p,{children:"The performance of the Dexie.js RxStorage is good enough for most use cases but other storages can have way better performance metrics:"}),"\n",(0,t.jsx)("p",{align:"center",children:(0,t.jsx)("img",{src:"./files/rx-storage-performance-browser.png",alt:"RxStorage performance - browser Dexie.js",width:"700"})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var s=n(6540);const t={},i=s.createContext(t);function o(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);